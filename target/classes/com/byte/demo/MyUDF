import org.apache.spark.sql.functions.udf
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

// 定义UDF
val convertToStandardTimeUDF = udf((timeStr: String) => {
  val formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")

  timeStr match {
    case """^(\d{4})-(\d{2})-(\d{2}) (\d{2})\:(\d{2})\:(\d{2})$""".r(year, month, day, hour, minute, second) =>
      val dateTime = LocalDateTime.of(year.toInt, month.toInt, day.toInt, hour.toInt, minute.toInt, second.toInt)
      dateTime.format(formatter)

    case """^(\d{2})/(\d{2})/(\d{4}) (\d{2})\:(\d{2})\:(\d{2})$""".r(day, month, year, hour, minute, second) =>
      val dateTime = LocalDateTime.of(year.toInt, month.toInt, day.toInt, hour.toInt, minute.toInt, second.toInt)
      dateTime.format(formatter)

    case _ => null // 或返回一个空字符串：""
  }
})

// 在DataFrame中使用UDF
val df = Seq(("2023-05-29 10:20:30"), ("05/29/2023 10:20:30"), ("20230529 102030"))
  .toDF("time_str")
  .withColumn("standard_time", convertToStandardTimeUDF($"time_str"))

df.show()
